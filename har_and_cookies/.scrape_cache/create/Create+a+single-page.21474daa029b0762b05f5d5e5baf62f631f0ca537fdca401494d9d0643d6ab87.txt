Creating a simple single-page HTML screensaver without any text can be done using HTML, CSS, and a bit of JavaScript for animation. Below is an example of a screensaver that features animated colorful circles that move around the screen.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Screensaver</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: black;
        }
        .circle {
            position: absolute;
            border-radius: 50%;
            opacity: 0.7;
        }
    </style>
</head>
<body>
    <script>
        const colors = ['#FF5733', '#33FF57', '#3357FF', '#F1C40F', '#8E44AD', '#E74C3C', '#3498DB'];
        const numCircles = 20;

        function createCircle() {
            const circle = document.createElement('div');
            const size = Math.random() * 50 + 20; // Random size between 20 and 70
            circle.style.width = `${size}px`;
            circle.style.height = `${size}px`;
            circle.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
            circle.classList.add('circle');
            document.body.appendChild(circle);

            // Random position
            circle.style.left = `${Math.random() * window.innerWidth}px`;
            circle.style.top = `${Math.random() * window.innerHeight}px`;

            // Random animation
            animateCircle(circle);
        }

        function animateCircle(circle) {
            const deltaX = (Math.random() - 0.5) * 4; // Random horizontal speed
            const deltaY = (Math.random() - 0.5) * 4; // Random vertical speed

            function move() {
                const rect = circle.getBoundingClientRect();
                if (rect.left + deltaX < 0 || rect.right + deltaX > window.innerWidth) {
                    deltaX *= -1; // Reverse direction on horizontal edge
                }
                if (rect.top + deltaY < 0 || rect.bottom + deltaY > window.innerHeight) {
                    deltaY *= -1; // Reverse direction on vertical edge
                }

                circle.style.left = `${rect.left + deltaX}px`;
                circle.style.top = `${rect.top + deltaY}px`;

                requestAnimationFrame(move);
            }
            move();
        }

        for (let i = 0; i < numCircles; i++) {
            createCircle();
        }
    </script>
</body>
</html>
```

### Explanation:
- **HTML Structure**: The HTML is minimal, containing only a `<body>` tag where the circles will be dynamically created.
- **CSS Styles**: The body has no margin and a black background. The circles are styled to be round and semi-transparent.
- **JavaScript Logic**:
  - An array of colors is defined for the circles.
  - A function `createCircle` generates a circle with a random size and color, positions it randomly on the screen, and starts its animation.
  - The `animateCircle` function moves the circle around the screen, reversing its direction when it hits the edges of the viewport.
- **Animation**: The circles will continuously move around the screen, creating a dynamic and visually appealing screensaver effect.

You can copy and paste this code into an HTML file and open it in a web browser to see the screensaver in action.